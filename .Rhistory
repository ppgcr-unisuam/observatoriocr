}
}
}
# build the graph object
network <- graph_from_edgelist(edge.matrix, directed = FALSE)
# set member category and color
for (i in 1:length(V(network))){
categ.id <- match(V(network)[[i]]$name, membros.raw$`Nome do Membro do Projeto`)
V(network)[[i]]$categ <- membros.raw$`Categoria do Membro do Projeto`[categ.id]
col.id <- match(V(network)[[i]]$categ, levels(categ))
V(network)[i]$color <- colrs[col.id]
}
# plot it
par(oma=c(0, 0, 0, 0), mar = c(0, 0, 0, 0), bg = '#2C3E50', col.lab = "white", mfrow=c(1,1))
colrs <- brewer.pal(n = n.categ, name = "Set3")
plot(network, directed = FALSE, arrow.mode = 0, vertex.label = NA, vertex.frame.color = "white", vertex.size = log(deg)*0.7, edge.color = "grey", edge.lty = "solid", edge.size = 3, edge.curved = .2)
legend("bottom", legend = levels(categ), pch = 19, col = colrs, text.col = "white", bty = "n", horiz = TRUE, cex = 0.8, x.intersp = 0.2)
options(knitr.kable.NA = '--', knitr.table.format = "html")
# read packages
library(knitr)
library(kableExtra)
library(readxl)
library(igraph)
library(RColorBrewer)
# read data and row-bind all Sucupira XLSX files
sheet <- "Projetos - Membros"
membros.raw <- c()
files.to.read <- list.files("../PPGCR Unisuam/Sucupira/", pattern = "xlsx", full.names = TRUE)
for(i in 1:length(files.to.read)){
membros.raw <- rbind(membros.raw, read_excel(files.to.read[i], sheet = sheet))
}
# create edge matrix
proj.id <- as.factor(membros.raw$`Identificador do Projeto de Pesquisa`)
n.proj <- nlevels(proj.id)
membros <- sort(unique(membros.raw$`Nome do Membro do Projeto`))
n.membros <- length(membros)
categ <- as.factor(membros.raw$`Categoria do Membro do Projeto`)
n.categ <- nlevels(categ)
edge.matrix <- matrix(NA, nrow = 0, ncol = 2)
colnames(edge.matrix) <- c("from", "to")
# loop across all projects to populate the edge matrix
for(i in 1:n.proj){
# get the members by project id
membros.proj <- unique(membros.raw$`Nome do Membro do Projeto`[proj.id == levels(proj.id)[i]])
# only vote for upper diagonal elements
for(n in 1:length(membros.proj)){
for(m in n:length(membros.proj)){
if(n != m){
# find members
row.n <- match(membros.proj[n], membros)
col.m <- match(membros.proj[m], membros)
new.edge <- cbind(membros[row.n], membros[col.m])
# add edges
edge.matrix <- rbind(edge.matrix, new.edge)
}
}
}
}
# build the graph object
network <- graph_from_edgelist(edge.matrix, directed = FALSE)
# set member category and color
for (i in 1:length(V(network))){
categ.id <- match(V(network)[[i]]$name, membros.raw$`Nome do Membro do Projeto`)
V(network)[[i]]$categ <- membros.raw$`Categoria do Membro do Projeto`[categ.id]
col.id <- match(V(network)[[i]]$categ, levels(categ))
V(network)[i]$color <- colrs[col.id]
}
# plot it
par(oma=c(1, 0, 0, 0), mar = c(0, 0, 0, 0), bg = '#2C3E50', col.lab = "white", mfrow=c(1,1))
colrs <- brewer.pal(n = n.categ, name = "Set3")
plot(network, directed = FALSE, arrow.mode = 0, vertex.label = NA, vertex.frame.color = "white", vertex.size = log(deg)*0.7, edge.color = "grey", edge.lty = "solid", edge.size = 3, edge.curved = .2)
legend("bottom", legend = levels(categ), pch = 19, col = colrs, text.col = "white", bty = "n", horiz = TRUE, cex = 0.8, x.intersp = 0.2)
options(knitr.kable.NA = '--', knitr.table.format = "html")
# read packages
library(knitr)
library(kableExtra)
library(readxl)
library(igraph)
library(RColorBrewer)
# read data and row-bind all Sucupira XLSX files
sheet <- "Projetos - Membros"
membros.raw <- c()
files.to.read <- list.files("../PPGCR Unisuam/Sucupira/", pattern = "xlsx", full.names = TRUE)
for(i in 1:length(files.to.read)){
membros.raw <- rbind(membros.raw, read_excel(files.to.read[i], sheet = sheet))
}
# create edge matrix
proj.id <- as.factor(membros.raw$`Identificador do Projeto de Pesquisa`)
n.proj <- nlevels(proj.id)
membros <- sort(unique(membros.raw$`Nome do Membro do Projeto`))
n.membros <- length(membros)
categ <- as.factor(membros.raw$`Categoria do Membro do Projeto`)
n.categ <- nlevels(categ)
edge.matrix <- matrix(NA, nrow = 0, ncol = 2)
colnames(edge.matrix) <- c("from", "to")
# loop across all projects to populate the edge matrix
for(i in 1:n.proj){
# get the members by project id
membros.proj <- unique(membros.raw$`Nome do Membro do Projeto`[proj.id == levels(proj.id)[i]])
# only vote for upper diagonal elements
for(n in 1:length(membros.proj)){
for(m in n:length(membros.proj)){
if(n != m){
# find members
row.n <- match(membros.proj[n], membros)
col.m <- match(membros.proj[m], membros)
new.edge <- cbind(membros[row.n], membros[col.m])
# add edges
edge.matrix <- rbind(edge.matrix, new.edge)
}
}
}
}
# build the graph object
network <- graph_from_edgelist(edge.matrix, directed = FALSE)
# set member category and color
for (i in 1:length(V(network))){
categ.id <- match(V(network)[[i]]$name, membros.raw$`Nome do Membro do Projeto`)
V(network)[[i]]$categ <- membros.raw$`Categoria do Membro do Projeto`[categ.id]
col.id <- match(V(network)[[i]]$categ, levels(categ))
V(network)[i]$color <- colrs[col.id]
}
# plot it
par(oma=c(0, 0, 0, 0), mar = c(1, 0, 0, 0), bg = '#2C3E50', col.lab = "white", mfrow=c(1,1))
colrs <- brewer.pal(n = n.categ, name = "Set3")
plot(network, directed = FALSE, arrow.mode = 0, vertex.label = NA, vertex.frame.color = "white", vertex.size = log(deg)*0.7, edge.color = "grey", edge.lty = "solid", edge.size = 3, edge.curved = .2)
legend("bottom", legend = levels(categ), pch = 19, col = colrs, text.col = "white", bty = "n", horiz = TRUE, cex = 0.8, x.intersp = 0.2)
options(knitr.kable.NA = '--', knitr.table.format = "html")
# read packages
library(knitr)
library(kableExtra)
library(readxl)
library(igraph)
library(RColorBrewer)
# read data and row-bind all Sucupira XLSX files
sheet <- "Projetos - Membros"
membros.raw <- c()
files.to.read <- list.files("../PPGCR Unisuam/Sucupira/", pattern = "xlsx", full.names = TRUE)
for(i in 1:length(files.to.read)){
membros.raw <- rbind(membros.raw, read_excel(files.to.read[i], sheet = sheet))
}
# create edge matrix
proj.id <- as.factor(membros.raw$`Identificador do Projeto de Pesquisa`)
n.proj <- nlevels(proj.id)
membros <- sort(unique(membros.raw$`Nome do Membro do Projeto`))
n.membros <- length(membros)
categ <- as.factor(membros.raw$`Categoria do Membro do Projeto`)
n.categ <- nlevels(categ)
edge.matrix <- matrix(NA, nrow = 0, ncol = 2)
colnames(edge.matrix) <- c("from", "to")
# loop across all projects to populate the edge matrix
for(i in 1:n.proj){
# get the members by project id
membros.proj <- unique(membros.raw$`Nome do Membro do Projeto`[proj.id == levels(proj.id)[i]])
# only vote for upper diagonal elements
for(n in 1:length(membros.proj)){
for(m in n:length(membros.proj)){
if(n != m){
# find members
row.n <- match(membros.proj[n], membros)
col.m <- match(membros.proj[m], membros)
new.edge <- cbind(membros[row.n], membros[col.m])
# add edges
edge.matrix <- rbind(edge.matrix, new.edge)
}
}
}
}
# build the graph object
network <- graph_from_edgelist(edge.matrix, directed = FALSE)
# set member category and color
for (i in 1:length(V(network))){
categ.id <- match(V(network)[[i]]$name, membros.raw$`Nome do Membro do Projeto`)
V(network)[[i]]$categ <- membros.raw$`Categoria do Membro do Projeto`[categ.id]
col.id <- match(V(network)[[i]]$categ, levels(categ))
V(network)[i]$color <- colrs[col.id]
}
# plot it
par(oma=c(0, 0, 0, 0), mar = c(2, 0, 0, 0), bg = '#2C3E50', col.lab = "white", mfrow=c(1,1))
colrs <- brewer.pal(n = n.categ, name = "Set3")
plot(network, directed = FALSE, arrow.mode = 0, vertex.label = NA, vertex.frame.color = "white", vertex.size = log(deg)*0.7, edge.color = "grey", edge.lty = "solid", edge.size = 3, edge.curved = .2)
legend("bottom", legend = levels(categ), pch = 19, col = colrs, text.col = "white", bty = "n", horiz = TRUE, cex = 0.8, x.intersp = 0.2)
options(knitr.kable.NA = '--', knitr.table.format = "html")
# read packages
library(knitr)
library(kableExtra)
library(readxl)
library(igraph)
library(RColorBrewer)
# read data and row-bind all Sucupira XLSX files
sheet <- "Projetos - Membros"
membros.raw <- c()
files.to.read <- list.files("../PPGCR Unisuam/Sucupira/", pattern = "xlsx", full.names = TRUE)
for(i in 1:length(files.to.read)){
membros.raw <- rbind(membros.raw, read_excel(files.to.read[i], sheet = sheet))
}
# create edge matrix
proj.id <- as.factor(membros.raw$`Identificador do Projeto de Pesquisa`)
n.proj <- nlevels(proj.id)
membros <- sort(unique(membros.raw$`Nome do Membro do Projeto`))
n.membros <- length(membros)
categ <- as.factor(membros.raw$`Categoria do Membro do Projeto`)
n.categ <- nlevels(categ)
edge.matrix <- matrix(NA, nrow = 0, ncol = 2)
colnames(edge.matrix) <- c("from", "to")
# loop across all projects to populate the edge matrix
for(i in 1:n.proj){
# get the members by project id
membros.proj <- unique(membros.raw$`Nome do Membro do Projeto`[proj.id == levels(proj.id)[i]])
# only vote for upper diagonal elements
for(n in 1:length(membros.proj)){
for(m in n:length(membros.proj)){
if(n != m){
# find members
row.n <- match(membros.proj[n], membros)
col.m <- match(membros.proj[m], membros)
new.edge <- cbind(membros[row.n], membros[col.m])
# add edges
edge.matrix <- rbind(edge.matrix, new.edge)
}
}
}
}
# build the graph object
network <- graph_from_edgelist(edge.matrix, directed = FALSE)
# set member category and color
for (i in 1:length(V(network))){
categ.id <- match(V(network)[[i]]$name, membros.raw$`Nome do Membro do Projeto`)
V(network)[[i]]$categ <- membros.raw$`Categoria do Membro do Projeto`[categ.id]
col.id <- match(V(network)[[i]]$categ, levels(categ))
V(network)[i]$color <- colrs[col.id]
}
# plot it
par(oma=c(2, 0, 0, 0), mar = c(0, 0, 0, 0), bg = '#2C3E50', col.lab = "white", mfrow=c(1,1))
colrs <- brewer.pal(n = n.categ, name = "Set3")
plot(network, directed = FALSE, arrow.mode = 0, vertex.label = NA, vertex.frame.color = "white", vertex.size = log(deg)*0.7, edge.color = "grey", edge.lty = "solid", edge.size = 3, edge.curved = .2)
legend("bottom", legend = levels(categ), pch = 19, col = colrs, text.col = "white", bty = "n", horiz = TRUE, cex = 0.8, x.intersp = 0.2)
options(knitr.kable.NA = '--', knitr.table.format = "html")
# read packages
library(knitr)
library(kableExtra)
library(readxl)
library(igraph)
library(RColorBrewer)
# read data and row-bind all Sucupira XLSX files
sheet <- "Projetos - Membros"
membros.raw <- c()
files.to.read <- list.files("../PPGCR Unisuam/Sucupira/", pattern = "xlsx", full.names = TRUE)
for(i in 1:length(files.to.read)){
membros.raw <- rbind(membros.raw, read_excel(files.to.read[i], sheet = sheet))
}
# create edge matrix
proj.id <- as.factor(membros.raw$`Identificador do Projeto de Pesquisa`)
n.proj <- nlevels(proj.id)
membros <- sort(unique(membros.raw$`Nome do Membro do Projeto`))
n.membros <- length(membros)
categ <- as.factor(membros.raw$`Categoria do Membro do Projeto`)
n.categ <- nlevels(categ)
edge.matrix <- matrix(NA, nrow = 0, ncol = 2)
colnames(edge.matrix) <- c("from", "to")
# loop across all projects to populate the edge matrix
for(i in 1:n.proj){
# get the members by project id
membros.proj <- unique(membros.raw$`Nome do Membro do Projeto`[proj.id == levels(proj.id)[i]])
# only vote for upper diagonal elements
for(n in 1:length(membros.proj)){
for(m in n:length(membros.proj)){
if(n != m){
# find members
row.n <- match(membros.proj[n], membros)
col.m <- match(membros.proj[m], membros)
new.edge <- cbind(membros[row.n], membros[col.m])
# add edges
edge.matrix <- rbind(edge.matrix, new.edge)
}
}
}
}
# build the graph object
network <- graph_from_edgelist(edge.matrix, directed = FALSE)
# set member category and color
for (i in 1:length(V(network))){
categ.id <- match(V(network)[[i]]$name, membros.raw$`Nome do Membro do Projeto`)
V(network)[[i]]$categ <- membros.raw$`Categoria do Membro do Projeto`[categ.id]
col.id <- match(V(network)[[i]]$categ, levels(categ))
V(network)[i]$color <- colrs[col.id]
}
# plot it
par(oma=c(0, 0, 0, 0), mar = c(0, 0, 0, 0), bg = '#2C3E50', col.lab = "white", mfrow=c(1,1))
colrs <- brewer.pal(n = n.categ, name = "Set3")
plot(network, directed = FALSE, arrow.mode = 0, vertex.label = NA, vertex.frame.color = "white", vertex.size = log(deg)*0.7, edge.color = "grey", edge.lty = "solid", edge.size = 3, edge.curved = .2)
legend(x = 0, y = -1, "bottom", legend = levels(categ), pch = 19, col = colrs, text.col = "white", bty = "n", horiz = TRUE, cex = 0.8, x.intersp = 0.2)
options(knitr.kable.NA = '--', knitr.table.format = "html")
# read packages
library(knitr)
library(kableExtra)
library(readxl)
library(igraph)
library(RColorBrewer)
# read data and row-bind all Sucupira XLSX files
sheet <- "Projetos - Membros"
membros.raw <- c()
files.to.read <- list.files("../PPGCR Unisuam/Sucupira/", pattern = "xlsx", full.names = TRUE)
for(i in 1:length(files.to.read)){
membros.raw <- rbind(membros.raw, read_excel(files.to.read[i], sheet = sheet))
}
# create edge matrix
proj.id <- as.factor(membros.raw$`Identificador do Projeto de Pesquisa`)
n.proj <- nlevels(proj.id)
membros <- sort(unique(membros.raw$`Nome do Membro do Projeto`))
n.membros <- length(membros)
categ <- as.factor(membros.raw$`Categoria do Membro do Projeto`)
n.categ <- nlevels(categ)
edge.matrix <- matrix(NA, nrow = 0, ncol = 2)
colnames(edge.matrix) <- c("from", "to")
# loop across all projects to populate the edge matrix
for(i in 1:n.proj){
# get the members by project id
membros.proj <- unique(membros.raw$`Nome do Membro do Projeto`[proj.id == levels(proj.id)[i]])
# only vote for upper diagonal elements
for(n in 1:length(membros.proj)){
for(m in n:length(membros.proj)){
if(n != m){
# find members
row.n <- match(membros.proj[n], membros)
col.m <- match(membros.proj[m], membros)
new.edge <- cbind(membros[row.n], membros[col.m])
# add edges
edge.matrix <- rbind(edge.matrix, new.edge)
}
}
}
}
# build the graph object
network <- graph_from_edgelist(edge.matrix, directed = FALSE)
# set member category and color
for (i in 1:length(V(network))){
categ.id <- match(V(network)[[i]]$name, membros.raw$`Nome do Membro do Projeto`)
V(network)[[i]]$categ <- membros.raw$`Categoria do Membro do Projeto`[categ.id]
col.id <- match(V(network)[[i]]$categ, levels(categ))
V(network)[i]$color <- colrs[col.id]
}
# plot it
par(oma=c(0, 0, 0, 0), mar = c(0, 0, 0, 0), bg = '#2C3E50', col.lab = "white", mfrow=c(1,1))
colrs <- brewer.pal(n = n.categ, name = "Set3")
plot(network, directed = FALSE, arrow.mode = 0, vertex.label = NA, vertex.frame.color = "white", vertex.size = log(deg)*0.7, edge.color = "grey", edge.lty = "solid", edge.size = 3, edge.curved = .2)
legend(x = 0, y = -1, legend = levels(categ), pch = 19, col = colrs, text.col = "white", bty = "n", horiz = TRUE, cex = 0.8, x.intersp = 0.2)
options(knitr.kable.NA = '--', knitr.table.format = "html")
# read packages
library(knitr)
library(kableExtra)
library(readxl)
library(igraph)
library(RColorBrewer)
# read data and row-bind all Sucupira XLSX files
sheet <- "Projetos - Membros"
membros.raw <- c()
files.to.read <- list.files("../PPGCR Unisuam/Sucupira/", pattern = "xlsx", full.names = TRUE)
for(i in 1:length(files.to.read)){
membros.raw <- rbind(membros.raw, read_excel(files.to.read[i], sheet = sheet))
}
# create edge matrix
proj.id <- as.factor(membros.raw$`Identificador do Projeto de Pesquisa`)
n.proj <- nlevels(proj.id)
membros <- sort(unique(membros.raw$`Nome do Membro do Projeto`))
n.membros <- length(membros)
categ <- as.factor(membros.raw$`Categoria do Membro do Projeto`)
n.categ <- nlevels(categ)
edge.matrix <- matrix(NA, nrow = 0, ncol = 2)
colnames(edge.matrix) <- c("from", "to")
# loop across all projects to populate the edge matrix
for(i in 1:n.proj){
# get the members by project id
membros.proj <- unique(membros.raw$`Nome do Membro do Projeto`[proj.id == levels(proj.id)[i]])
# only vote for upper diagonal elements
for(n in 1:length(membros.proj)){
for(m in n:length(membros.proj)){
if(n != m){
# find members
row.n <- match(membros.proj[n], membros)
col.m <- match(membros.proj[m], membros)
new.edge <- cbind(membros[row.n], membros[col.m])
# add edges
edge.matrix <- rbind(edge.matrix, new.edge)
}
}
}
}
# build the graph object
network <- graph_from_edgelist(edge.matrix, directed = FALSE)
# set member category and color
for (i in 1:length(V(network))){
categ.id <- match(V(network)[[i]]$name, membros.raw$`Nome do Membro do Projeto`)
V(network)[[i]]$categ <- membros.raw$`Categoria do Membro do Projeto`[categ.id]
col.id <- match(V(network)[[i]]$categ, levels(categ))
V(network)[i]$color <- colrs[col.id]
}
# plot it
par(oma=c(0, 0, 0, 0), mar = c(0, 0, 0, 0), bg = '#2C3E50', col.lab = "white", mfrow=c(1,1))
colrs <- brewer.pal(n = n.categ, name = "Set3")
plot(network, directed = FALSE, arrow.mode = 0, vertex.label = NA, vertex.frame.color = "white", vertex.size = log(deg)*0.7, edge.color = "grey", edge.lty = "solid", edge.size = 3, edge.curved = .2)
legend("topleft", legend = levels(categ), pch = 19, col = colrs, text.col = "white", bty = "n", horiz = FALSE, cex = 0.8, x.intersp = 0.2)
options(knitr.kable.NA = '--', knitr.table.format = "html")
# read packages
library(knitr)
library(kableExtra)
library(readxl)
library(igraph)
library(RColorBrewer)
# read data and row-bind all Sucupira XLSX files
sheet <- "Projetos - Membros"
membros.raw <- c()
files.to.read <- list.files("../PPGCR Unisuam/Sucupira/", pattern = "xlsx", full.names = TRUE)
for(i in 1:length(files.to.read)){
membros.raw <- rbind(membros.raw, read_excel(files.to.read[i], sheet = sheet))
}
# create edge matrix
proj.id <- as.factor(membros.raw$`Identificador do Projeto de Pesquisa`)
n.proj <- nlevels(proj.id)
membros <- sort(unique(membros.raw$`Nome do Membro do Projeto`))
n.membros <- length(membros)
categ <- as.factor(membros.raw$`Categoria do Membro do Projeto`)
n.categ <- nlevels(categ)
edge.matrix <- matrix(NA, nrow = 0, ncol = 2)
colnames(edge.matrix) <- c("from", "to")
# loop across all projects to populate the edge matrix
for(i in 1:n.proj){
# get the members by project id
membros.proj <- unique(membros.raw$`Nome do Membro do Projeto`[proj.id == levels(proj.id)[i]])
# only vote for upper diagonal elements
for(n in 1:length(membros.proj)){
for(m in n:length(membros.proj)){
if(n != m){
# find members
row.n <- match(membros.proj[n], membros)
col.m <- match(membros.proj[m], membros)
new.edge <- cbind(membros[row.n], membros[col.m])
# add edges
edge.matrix <- rbind(edge.matrix, new.edge)
}
}
}
}
# build the graph object
network <- graph_from_edgelist(edge.matrix, directed = FALSE)
# set member category and color
for (i in 1:length(V(network))){
categ.id <- match(V(network)[[i]]$name, membros.raw$`Nome do Membro do Projeto`)
V(network)[[i]]$categ <- membros.raw$`Categoria do Membro do Projeto`[categ.id]
col.id <- match(V(network)[[i]]$categ, levels(categ))
V(network)[i]$color <- colrs[col.id]
}
# plot it
par(oma=c(0, 0, 0, 0), mar = c(0, 0, 0, 0), bg = '#2C3E50', col.lab = "white", mfrow=c(1,1))
colrs <- brewer.pal(n = n.categ, name = "Set3")
plot(network, directed = FALSE, arrow.mode = 0, vertex.label = NA, vertex.frame.color = "white", vertex.size = log(deg)*0.7, edge.color = "grey", edge.lty = "solid", edge.size = 3, edge.curved = .2)
legend("bottomleft", legend = levels(categ), pch = 19, col = colrs, text.col = "white", bty = "n", horiz = FALSE, cex = 0.8, x.intersp = 1)
options(knitr.kable.NA = '--', knitr.table.format = "html")
# read packages
library(knitr)
library(kableExtra)
library(readxl)
library(igraph)
library(RColorBrewer)
# read data and row-bind all Sucupira XLSX files
sheet <- "Projetos - Membros"
membros.raw <- c()
files.to.read <- list.files("../PPGCR Unisuam/Sucupira/", pattern = "xlsx", full.names = TRUE)
for(i in 1:length(files.to.read)){
membros.raw <- rbind(membros.raw, read_excel(files.to.read[i], sheet = sheet))
}
# create edge matrix
proj.id <- as.factor(membros.raw$`Identificador do Projeto de Pesquisa`)
n.proj <- nlevels(proj.id)
membros <- sort(unique(membros.raw$`Nome do Membro do Projeto`))
n.membros <- length(membros)
categ <- as.factor(membros.raw$`Categoria do Membro do Projeto`)
n.categ <- nlevels(categ)
edge.matrix <- matrix(NA, nrow = 0, ncol = 2)
colnames(edge.matrix) <- c("from", "to")
# loop across all projects to populate the edge matrix
for(i in 1:n.proj){
# get the members by project id
membros.proj <- unique(membros.raw$`Nome do Membro do Projeto`[proj.id == levels(proj.id)[i]])
# only vote for upper diagonal elements
for(n in 1:length(membros.proj)){
for(m in n:length(membros.proj)){
if(n != m){
# find members
row.n <- match(membros.proj[n], membros)
col.m <- match(membros.proj[m], membros)
new.edge <- cbind(membros[row.n], membros[col.m])
# add edges
edge.matrix <- rbind(edge.matrix, new.edge)
}
}
}
}
# build the graph object
network <- graph_from_edgelist(edge.matrix, directed = FALSE)
# set member category and color
for (i in 1:length(V(network))){
categ.id <- match(V(network)[[i]]$name, membros.raw$`Nome do Membro do Projeto`)
V(network)[[i]]$categ <- membros.raw$`Categoria do Membro do Projeto`[categ.id]
col.id <- match(V(network)[[i]]$categ, levels(categ))
V(network)[i]$color <- colrs[col.id]
}
# plot it
par(oma=c(0, 0, 0, 0), mar = c(0, 0, 0, 0), bg = '#2C3E50', col.lab = "white", mfrow=c(1,1))
colrs <- brewer.pal(n = n.categ, name = "Set3")
plot(network, directed = FALSE, arrow.mode = 0, vertex.label = NA, vertex.frame.color = "white", vertex.size = log(deg)*0.7, edge.color = "grey", edge.lty = "solid", edge.size = 3, edge.curved = .2)
legend("bottomright", legend = levels(categ), pch = 19, col = colrs, text.col = "white", bty = "n", horiz = FALSE, cex = 0.8, x.intersp = 1)
