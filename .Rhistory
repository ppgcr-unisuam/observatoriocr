na.rm = TRUE
)[, 3]
table.3.max <-
aggregate(
table.3,
by = list(artigos$Publicado.em),
FUN = max,
na.rm = TRUE
)[, 3]
names(table.3.min) <- names(table.3.mean)
names(table.3.max) <- names(table.3.mean)
# plot area setup
par(
oma = c(1, 1, 1, 1),
mar = c(1, 1, 1, 1),
bg = '#2C3E50',
col.lab = "white",
col.axis = "white",
fg = "white",
col.main = "white"
)
# plot 1
barplot(table.1,
ylab = "N",
col = rep(brewer.pal(n = 9, name = "Set3")[1], length(table.1)))
title(main = "Produção Bibliográfica",
outer = TRUE,
cex.main = 1.7)
# plot 2
barplot(as.matrix(table.2),
ylab = "Estrato",
col = rev(colorRampPalette(brewer.pal(9, "Blues"))(length(estratos))))
title(main = "Qualidade da produção (Qualis)",
outer = TRUE,
cex.main = 1.7)
legend(
"topleft",
legend = rev(estratos),
fill = rev(colorRampPalette(brewer.pal(9, "Blues"))(length(estratos))),
text.col = "white",
box.lwd = 0,
bty = "n",
horiz = FALSE,
cex = 1,
)
# plot 3
barplot(
scale(
as.matrix(table.2),
center = FALSE,
scale = colSums(as.matrix(table.2))
) * 100,
ylab = "%",
col = rev(colorRampPalette(brewer.pal(9, "Blues"))(length(estratos) + 1)),
ylim = c(0, 100)
)
title(main = "Qualidade da produção (Qualis)",
outer = TRUE,
cex.main = 1.7)
# plot 4
plot(table.3.mean,
lty = "solid",
lwd = 2,
ylab = "SJR",
col = rep(brewer.pal(n = 9, name = "Set3")[1], length(table.3.mean)))
polygon(
x = c(names(table.3.max), rev(names(table.3.min))),
y = c(table.3.max, rev(table.3.min)),
col = brewer.pal(n = 9, name = "Set3")[1]
)
title(main = "Qualidade da produção (SJR)",
outer = TRUE,
cex.main = 1.7)
options(knitr.kable.NA = '--', knitr.table.format = "html")
# read SCImago csv file (download from https://www.scimagojr.com)
scimago <-
read.csv(
"SJR/scimagojr 2020.csv",
header = TRUE,
sep = ";",
quote = "\"",
dec = ",",
fill = TRUE
)
# read QUALIS xlsx file (download from https://www.scimagojr.com)
qualis <-
data.frame(read_excel(
"Qualis/QUALIS Referência 2017-2018.xlsx",
sheet = 1,
col_types = c("text")
))
# read data
artigos <-
data.frame(read_excel(
"../PPGCR Unisuam/Produção.xlsx",
sheet = "PI.artigos",
col_types = c("text")
))
# Data cleaning
artigos <- artigos[complete.cases(artigos$DOI), ]
artigos$WebQualis[artigos$WebQualis == "Sem WebQualis"] <- "NA"
# remove os aceitos e submetidos
artigos <-
artigos[artigos$Publicado.em != "Aceito" &
artigos$Publicado.em != "Submetido",]
# estratos Qualis
estratos <- sort(unique(artigos$WebQualis))
# SJR
SJR <- c()
for (i in 1:dim(artigos)[1]) {
SJR.i <-
as.numeric(scimago[grep(gsub("-", "", artigos$ISSN[i]), scimago$Issn), 6])
SJR <-
c(SJR, ifelse(identical(SJR.i, numeric(0)) |
all(is.na(SJR.i)), NA, SJR.i))
}
# generate cross tables of artigos per year
table.1 <- table(artigos$Publicado.em)
table.2 <- t(table(artigos$Publicado.em, artigos$WebQualis))
table.2 <- apply(table.2, 2, rev)
table.2 <- table.2[order(rownames(table.2)), ]
table.3 <- data.frame(artigos$Publicado.em, SJR)
table.3.mean <-
aggregate(
table.3,
by = list(artigos$Publicado.em),
FUN = mean,
na.rm = TRUE
)
table.3.mean <- t(as.matrix(table.3.mean[,-2]))
table.3.mean <- as.numeric(table.3.mean[-1, ])
names(table.3.mean) <- names(table.1)
table.3.min <-
aggregate(
table.3,
by = list(artigos$Publicado.em),
FUN = min,
na.rm = TRUE
)[, 3]
table.3.max <-
aggregate(
table.3,
by = list(artigos$Publicado.em),
FUN = max,
na.rm = TRUE
)[, 3]
names(table.3.min) <- names(table.3.mean)
names(table.3.max) <- names(table.3.mean)
# plot area setup
par(
oma = c(1, 1, 1, 1),
mar = c(1, 1, 1, 1),
bg = '#2C3E50',
col.lab = "white",
col.axis = "white",
fg = "white",
col.main = "white"
)
# plot 1
barplot(table.1,
ylab = "N",
col = rep(brewer.pal(n = 9, name = "Set3")[1], length(table.1)))
title(main = "Produção Bibliográfica",
outer = TRUE,
cex.main = 1.7)
# plot 2
barplot(as.matrix(table.2),
ylab = "Estrato",
col = rev(colorRampPalette(brewer.pal(9, "Blues"))(length(estratos))))
title(main = "Qualidade da produção (Qualis)",
outer = TRUE,
cex.main = 1.7)
legend(
"topleft",
legend = rev(estratos),
fill = rev(colorRampPalette(brewer.pal(9, "Blues"))(length(estratos))),
text.col = "white",
box.lwd = 0,
bty = "n",
horiz = FALSE,
cex = 1,
)
# plot 3
barplot(
scale(
as.matrix(table.2),
center = FALSE,
scale = colSums(as.matrix(table.2))
) * 100,
ylab = "%",
col = rev(colorRampPalette(brewer.pal(9, "Blues"))(length(estratos) + 1)),
ylim = c(0, 100)
)
title(main = "Qualidade da produção (Qualis)",
outer = TRUE,
cex.main = 1.7)
# plot 4
plot(table.3.mean,
lty = "solid",
lwd = 2,
ylab = "SJR",
col = rep(brewer.pal(n = 9, name = "Set3")[1], length(table.3.mean)))
polygon(
x = c(names(table.3.max), rev(names(table.3.min))),
y = c(table.3.max, rev(table.3.min)),
col = brewer.pal(n = 9, name = "Set3")[1]
)
title(main = "Qualidade da produção (SJR)",
outer = TRUE,
cex.main = 1.7)
table.2
# generate cross tables of artigos per year
table.1 <- table(artigos$Publicado.em)
table.2 <- t(table(artigos$Publicado.em, artigos$WebQualis))
table.2 <- apply(table.2, 2, rev)
table.2 <- table.2[order(rownames(table.2)), ]
table.3 <- data.frame(artigos$Publicado.em, SJR)
table.3.mean <-
aggregate(
table.3,
by = list(artigos$Publicado.em),
FUN = mean,
na.rm = TRUE
)
table.3.mean <- as.numeric(table.3.mean[-1, ])
names(table.3.mean) <- names(table.1)
# generate cross tables of artigos per year
table.1 <- table(artigos$Publicado.em)
table.2 <- t(table(artigos$Publicado.em, artigos$WebQualis))
table.2 <- apply(table.2, 2, rev)
table.2 <- table.2[order(rownames(table.2)), ]
table.3 <- data.frame(artigos$Publicado.em, SJR)
table.3.mean <-
aggregate(
table.3,
by = list(artigos$Publicado.em),
FUN = mean,
na.rm = TRUE
)
table.3.mean <- t(as.matrix(table.3.mean[,-2]))
table.3.mean <- as.numeric(table.3.mean[-1, ])
names(table.3.mean) <- names(table.1)
table.3.min <-
aggregate(
table.3,
by = list(artigos$Publicado.em),
FUN = min,
na.rm = TRUE
)[, 3]
table.3.max <-
aggregate(
table.3,
by = list(artigos$Publicado.em),
FUN = max,
na.rm = TRUE
)[, 3]
names(table.3.min) <- names(table.3.mean)
names(table.3.max) <- names(table.3.mean)
# plot area setup
par(
oma = c(1, 1, 1, 1),
mar = c(1, 1, 1, 1),
bg = '#2C3E50',
col.lab = "white",
col.axis = "white",
fg = "white",
col.main = "white"
)
# plot 1
barplot(table.1,
ylab = "N",
col = rep(brewer.pal(n = 9, name = "Set3")[1], length(table.1)))
title(main = "Produção Bibliográfica",
outer = TRUE,
cex.main = 1.7)
# plot 2
barplot(as.matrix(table.2),
ylab = "Estrato",
col = rev(colorRampPalette(brewer.pal(9, "Blues"))(length(estratos))))
table.3
table.2
# create a new code chunk and then use the PACKUP add-in to generate this code with all the required libraries for this Rmd
library(bsplus)
library(cowplot)
library(dplyr)
library(geobr)
library(ggplot2)
library(ggpubr)
library(grid)
library(gridExtra)
library(gtsummary)
library(htmlwidgets)
library(igraph)
library(kableExtra)
library(knitr)
library(magrittr)
library(RColorBrewer)
library(readxl)
library(Rmisc)
library(sf)
library(tm)
library(viridis)
library(webshot2)
library(wordcloud2)
options(knitr.kable.NA = '--', knitr.table.format = "html")
# file path to save the wordclouds
dir.path <- file.path(getwd(), "index_files", "figure-html")
dir.create(dir.path, recursive = TRUE)
# projetos
sheet <- "Projetos"
source("Scripts/read_sucupira.R")
data.to.cloud <- sucupira.raw$`Nome do Projeto de Pesquisa`
cloud.title <- "Temas de Projetos"
source("Scripts/docs_to_wordcloud.R")
table.2
colorRampPalette(brewer.pal(9, "Blues"))(length(estratos))
view(colorRampPalette(brewer.pal(9, "Blues"))(length(estratos)))
colorRampPalette(brewer.pal(9, "Blues"))(length(estratos)))
colorRampPalette(brewer.pal(9, "Blues"))(length(estratos))
rev(colorRampPalette(brewer.pal(9, "Blues"))(length(estratos))))
rev(colorRampPalette(brewer.pal(9, "Blues"))(length(estratos)))
as.matrix(table.2)
# plot 2
barplot(table.2,
ylab = "Estrato",
col = rev(colorRampPalette(brewer.pal(9, "Blues"))(length(estratos))))
# plot 2
barplot(table.2,
ylab = "Estrato",
col = rev(colorRampPalette(brewer.pal(9, "Blues"))(length(estratos))))
title(main = "Qualidade da produção (Qualis)",
outer = TRUE,
cex.main = 1.7)
legend(
"topleft",
legend = rev(estratos),
fill = rev(colorRampPalette(brewer.pal(9, "Blues"))(length(estratos))),
text.col = "white",
box.lwd = 0,
bty = "n",
horiz = FALSE,
cex = 1,
)
as.numeric(c(names(table.3.max), rev(names(table.3.min))))
as.numeric(c(names(table.3.max)))
as.numeric(c(table.3.max, rev(table.3.min)))
c(table.3.max, rev(table.3.min))
# plot 4
barplot(
c(0,0),
ylab = "SJR",
)
lines(table.3.mean,
type = "l",
lwd = 3,
ylab = "SJR",
col = rep(brewer.pal(n = 9, name = "Set3")[1], length(table.3.mean)),
axes = FALSE)
c(min(table.3), max(table.3))
c(min(table.3.min), max(table.3.max))
length(as.numeric(c(names(table.3.max), rev(names(table.3.min)))))
length(c(table.3.max, rev(table.3.min)))
plot(as.numeric(c(names(table.3.max), rev(names(table.3.min)))), c(table.3.max, rev(table.3.min)))
brewer.pal(n = 9, name = "Set3")[1]
brewer.pal(n = 9, name = "Set3")[3]
install.packages("alluvial")
# create a new code chunk and then use the PACKUP add-in to generate this code with all the required libraries for this Rmd
library(alluvial)
library(bsplus)
library(cowplot)
library(dplyr)
library(geobr)
library(ggplot2)
library(ggpubr)
library(grid)
library(gridExtra)
library(gtsummary)
library(htmlwidgets)
library(igraph)
library(kableExtra)
library(knitr)
library(magrittr)
library(RColorBrewer)
library(readxl)
library(Rmisc)
library(sf)
library(tm)
library(viridis)
library(webshot2)
library(wordcloud2)
# structure the alluvial plot
# projetos
sheet <- "Projetos"
source("Scripts/read_sucupira.R")
alluv.data <- as.data.frame(sucupira.raw$`Área de Concentração`, sucupira.raw$`Linha de Pesquisa`)
head(alluv.data)
sucupira.raw
sucupira.raw$`Área de Concentração`
sucupira.raw$`Linha de Pesquisa`
alluv.data <- as.data.frame(sucupira.raw$`Área de Concentração`, sucupira.raw$`Linha de Pesquisa`)
head(alluv.data)
alluv.data
View(alluv.data)
alluv.data <- data.frame(sucupira.raw$`Área de Concentração`, sucupira.raw$`Linha de Pesquisa`)
View(alluv.data)
alluv.data <- data.frame(sucupira.raw$`Área de Concentração`, sucupira.raw$`Linha de Pesquisa`)
alluv.data <- alluv.data[complete.cases[alluv.data], ]
alluv.data <- alluv.data[complete.cases(alluv.data), ]
View(alluv.data)
aggregate(alluv.data, group_by = list=c(1,2))
aggregate(alluv.data, group_by(list=c(1,2)))
aggregate(alluv.data, group_by(list=c(1,2)), FUN = count())
aggregate(alluv.data, group_by(list=c(1,2)), FUN = count
)
aggregate(alluv.data, group_by(list=c(1,2)), FUN = freq)
aggregate(alluv.data, group_by(list=c(1,2)), FUN = frequency)
aggregate(alluv.data, by = list(sucupira.raw$`Área de Concentração`, sucupira.raw$`Linha de Pesquisa`), FUN = count)
aggregate(alluv.data, by = list(alluv.data$sucupira.raw..Área.de.Concentração., alluv.data$sucupira.raw..Linha.de.Pesquisa.), FUN = count)
temp <- aggregate(alluv.data, by = list(alluv.data$sucupira.raw..Área.de.Concentração., alluv.data$sucupira.raw..Linha.de.Pesquisa.), FUN = count)
View(temp)
temp <- aggregate(alluv.data, by = list(alluv.data$sucupira.raw..Área.de.Concentração., alluv.data$sucupira.raw..Linha.de.Pesquisa.), FUN = freq)
temp <- aggregate(alluv.data, by = list(alluv.data$sucupira.raw..Área.de.Concentração., alluv.data$sucupira.raw..Linha.de.Pesquisa.), FUN = sum)
aggregate(alluv.data, by = list(alluv.data$sucupira.raw..Área.de.Concentração., alluv.data$sucupira.raw..Linha.de.Pesquisa.), FUN = count)
temp <- aggregate(alluv.data, by = list(alluv.data$sucupira.raw..Área.de.Concentração., alluv.data$sucupira.raw..Linha.de.Pesquisa.), FUN = freq)
temp <- aggregate(alluv.data, by = list(alluv.data$sucupira.raw..Área.de.Concentração., alluv.data$sucupira.raw..Linha.de.Pesquisa.), FUN = count)
View(temp)
tapply(alluv.data, alluv.data, length)
tapply(alluv.data, alluv.data, count)
temp <- aggregate(alluv.data, by = list(alluv.data$sucupira.raw..Área.de.Concentração., alluv.data$sucupira.raw..Linha.de.Pesquisa.), FUN = length)
View(temp)
alluv.data.aggr <- aggregate(alluv.data, by = list(alluv.data$sucupira.raw..Área.de.Concentração., alluv.data$sucupira.raw..Linha.de.Pesquisa.), FUN = length)
View(alluv.data.aggr)
alluv.data.aggr <- aggregate(alluv.data, by = list( alluv.data$sucupira.raw..Linha.de.Pesquisa.), FUN = length)
View(alluv.data.aggr)
alluvial(alluv.data.aggr[,1:2], freq = alluv.data.aggr[, 3])
alluvial(alluv.data.aggr[,1:2], freq = alluv.data.aggr[, 3])
dev.new()
alluvial(alluv.data.aggr[,1:2], freq = alluv.data.aggr[, 3])
alluv.data.aggr[,1:2]
View(alluv.data.aggr)
alluv.data <- data.frame(sucupira.raw$`Área de Concentração`, sucupira.raw$`Linha de Pesquisa`)
alluv.data <- alluv.data[complete.cases(alluv.data), ]
alluv.data.aggr <- aggregate(alluv.data, by = list(alluv.data$sucupira.raw..Área.de.Concentração., alluv.data$sucupira.raw..Linha.de.Pesquisa.), FUN = length)
dev.new();alluvial(alluv.data.aggr[,1:2], freq = alluv.data.aggr[, 3])
dev.new()
alluvial(alluv.data.aggr[,1:2], freq = alluv.data.aggr[, 3])
# structure the alluvial plot
# projetos
sheet <- "Projetos"
source("Scripts/read_sucupira.R")
source("Scripts/read_sucupira.R")
alluv.data <- data.frame(sucupira.raw$`Área de Concentração`, sucupira.raw$`Linha de Pesquisa`, sucupira.raw$`Nome do Projeto de Pesquisa`)
alluv.data <- data.frame(sucupira.raw$`Área de Concentração`, sucupira.raw$`Linha de Pesquisa`, sucupira.raw$`Nome do Projeto de Pesquisa`)
alluv.data <- alluv.data[complete.cases(alluv.data), ]
alluv.data.aggr <- aggregate(alluv.data, by = list(alluv.data$sucupira.raw..Área.de.Concentração., alluv.data$sucupira.raw..Linha.de.Pesquisa., sucupira.raw$`Nome do Projeto de Pesquisa`), FUN = length)
View(alluv.data)
View(alluv.data.aggr)
alluv.data.aggr <- aggregate(alluv.data, by = list(alluv.data$sucupira.raw..Área.de.Concentração., alluv.data$sucupira.raw..Linha.de.Pesquisa., sucupira.raw$`Nome do Projeto de Pesquisa`), FUN = length)
alluv.data <- data.frame(sucupira.raw$`Área de Concentração`, sucupira.raw$`Linha de Pesquisa`, sucupira.raw$`Nome do Projeto de Pesquisa`)
alluv.data <- alluv.data[complete.cases(alluv.data), ]
alluv.data.aggr <- aggregate(alluv.data, by = list(alluv.data$sucupira.raw..Área.de.Concentração., alluv.data$sucupira.raw..Linha.de.Pesquisa., alluv.data$`Nome do Projeto de Pesquisa`), FUN = length)
alluv.data <- data.frame(sucupira.raw$`Área de Concentração`, sucupira.raw$`Linha de Pesquisa`, sucupira.raw$`Nome do Projeto de Pesquisa`)
alluv.data <- alluv.data[complete.cases(alluv.data), ]
alluv.data.aggr <- aggregate(alluv.data, by = list(alluv.data$sucupira.raw..Área.de.Concentração., alluv.data$sucupira.raw..Linha.de.Pesquisa., alluv.data$sucupira.raw..Nome.do.Projeto.de.Pesquisa.), FUN = length)
View(alluv.data.aggr)
dev.new()
alluvial(alluv.data.aggr[,1:3], freq = alluv.data.aggr[, 4])
View(alluv.data.aggr)
alluv.data <- data.frame(sucupira.raw$`Área de Concentração`, sucupira.raw$`Linha de Pesquisa`, sucupira.raw$`Identificador do Projeto de Pesquisa`)
alluv.data <- alluv.data[complete.cases(alluv.data), ]
alluv.data.aggr <- aggregate(alluv.data, by = list(alluv.data$sucupira.raw..Área.de.Concentração., alluv.data$sucupira.raw..Linha.de.Pesquisa., alluv.data$sucupira.raw..Identificador.do.Projeto.de.Pesquisa.), FUN = length)
alluvial(alluv.data.aggr[,1:3], freq = alluv.data.aggr[, 4])
dev.new()
alluvial(alluv.data.aggr[,1:3], freq = alluv.data.aggr[, 4])
dev.new()
alluvial(alluv.data.aggr[,1:3], freq = alluv.data.aggr[, 4])
View(alluv.data.aggr)
View(alluv.data.aggr)
colnames(alluv.data.aggr) <- c("AC", "LP", "PP")
View(alluv.data.aggr)
# drop repeated columns
alluv.data <- alluv.data[, 1:4]
# structure the alluvial plot
# projetos
sheet <- "Projetos"
source("Scripts/read_sucupira.R")
source("Scripts/read_sucupira.R")
alluv.data <- data.frame(sucupira.raw$`Área de Concentração`, sucupira.raw$`Linha de Pesquisa`, sucupira.raw$`Nome do Projeto de Pesquisa`)
alluv.data <- data.frame(sucupira.raw$`Área de Concentração`, sucupira.raw$`Linha de Pesquisa`, sucupira.raw$`Nome do Projeto de Pesquisa`)
alluv.data <- alluv.data[complete.cases(alluv.data), ]
alluv.data.aggr <- aggregate(alluv.data, by = list(alluv.data$sucupira.raw..Área.de.Concentração., alluv.data$sucupira.raw..Linha.de.Pesquisa., alluv.data$sucupira.raw..Nome.do.Projeto.de.Pesquisa.), FUN = length)
# drop repeated columns
alluv.data.aggr <- alluv.data.aggr[, 1:4]
colnames(alluv.data.aggr) <- c("AC", "LP", "PP", "Freq")
View(alluv.data)
View(alluv.data.aggr)
# recoding
alluv.data.aggr$AC <- as.factor(alluv.data.aggr$AC)
alluv.data.aggr$LP <- as.factor(alluv.data.aggr$LP)
alluv.data.aggr$PP <- as.factor(alluv.data.aggr$PP)
View(alluv.data.aggr)
alluv.data.aggr$AC
order(alluv.data.aggr$AC)
as.numeric(alluv.data.aggr$AC)
as.numeric(alluv.data.aggr$LP)
as.numeric(alluv.data.aggr$PP)
as.numeric(alluv.data.aggr)
# recoding
alluv.data.aggr$AC <- as.numeric(as.factor(alluv.data.aggr$AC))
View(alluv.data)
View(alluv.data)
View(alluv.data.aggr)
