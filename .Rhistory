library(gridExtra)
library(gtsummary)
library(igraph)
library(kableExtra)
library(knitr)
library(magrittr)
library(RColorBrewer)
library(readxl)
library(Rmisc)
library(sf)
library(tm)
library(wordcloud)
library(wordcloud2)
# projetos
sheet <- "Projetos"
source("Scripts/read_sucupira.R")
data.to.cloud <- sucupira.raw$`Nome do Projeto de Pesquisa`
source("Scripts/docs_to_wordcloud.R")
# dissertações e teses
sheet <- "TCC"
source("Scripts/read_sucupira.R")
data.to.cloud <- sucupira.raw$`Nome do Trabalho de Conclusão`
source("Scripts/docs_to_wordcloud.R")
# artigos
sheet <- "Produções"
source("Scripts/read_sucupira.R")
data.to.cloud <- sucupira.raw$`Nome da Produção`
source("Scripts/docs_to_wordcloud.R")
# carrega as imagens do chunk anterior para o carousel
images <- list.files(file.path("docs", "index_files", "figure-html"), pattern = "png", recursive = FALSE)
# carousel
bs_carousel(id = "wordcloud", use_indicators = TRUE, use_controls = TRUE) %>%
bs_append(content = bs_carousel_image(src = "index_files/figure-html/sintese-temas-1.png"), caption = bs_carousel_caption("Projetos de pesquisa")) %>%
bs_append(content = bs_carousel_image(src = "index_files/figure-html/sintese-temas-2.png"), caption = bs_carousel_caption("Dissertações e Teses")) %>%
bs_append(content = bs_carousel_image(src = "index_files/figure-html/sintese-temas-3.png"), caption = bs_carousel_caption("Produção bibliográfica"))
# projetos
sheet <- "Projetos"
source("Scripts/read_sucupira.R")
data.to.cloud <- sucupira.raw$`Nome do Projeto de Pesquisa`
source("Scripts/docs_to_wordcloud.R")
# dissertações e teses
sheet <- "TCC"
source("Scripts/read_sucupira.R")
data.to.cloud <- sucupira.raw$`Nome do Trabalho de Conclusão`
source("Scripts/docs_to_wordcloud.R")
# artigos
sheet <- "Produções"
source("Scripts/read_sucupira.R")
source("Scripts/docs_to_wordcloud.R")
# projetos
sheet <- "Projetos"
source("Scripts/read_sucupira.R")
data.to.cloud <- sucupira.raw$`Nome do Projeto de Pesquisa`
# for reproducibility
set.seed(0)
# create a corpus
docs <- Corpus(VectorSource(data.to.cloud))
# cleaning text
docs <- docs %>%
tm_map(removeNumbers) %>%
tm_map(removePunctuation) %>%
tm_map(stripWhitespace)
docs <- tm_map(docs, content_transformer(tolower))
tryCatch(docs <- tm_map(docs, removeWords, stopwords("portuguese")))
tryCatch(docs <- tm_map(docs, removeWords, stopwords("english")))
# create a document-term matrix
dtm <- TermDocumentMatrix(docs)
matrix <- as.matrix(dtm)
words <- sort(rowSums(matrix), decreasing = TRUE)
df <- data.frame(word = names(words), freq = words)
df
# create a document-term matrix
dtm <- TermDocumentMatrix(docs)
matrix <- as.matrix(dtm)
words <- sort(rowSums(matrix), decreasing = TRUE)
df <- data.frame(word = names(words), freq = words)
# set plot area
par(
oma = c(2, 0.1, 2, 0.1),
mar = c(5, 4, 2, 2),
bg = "#2C3E50"
)
wordcloud2(
data = df,
color = brewer.pal(10, "Set3"),
backgroundColor = "#2C3E50",
minRotation = -pi/2,
maxRotation = -pi/2,
shuffle = FALSE,
shape = "circle",
ellipticity = 1
)
# create a new code chunk and then use the PACKUP add-in to generate this code with all the required libraries for this Rmd
library(bsplus)
library(cowplot)
library(dplyr)
library(geobr)
library(ggplot2)
library(ggpubr)
library(grid)
library(gridExtra)
library(gtsummary)
library(htmlwidgets)
library(igraph)
library(kableExtra)
library(knitr)
library(magrittr)
library(RColorBrewer)
library(readxl)
library(Rmisc)
library(sf)
library(tm)
library(viridis)
library(webshot2)
library(wordcloud2)
options(knitr.kable.NA = '--', knitr.table.format = "html")
# projetos - membros
sheet <- "Projetos - Membros"
source("Scripts/read_sucupira.R")
# get all history of 'linha de pesquisa'
linhas <- na.exclude(unique(sucupira.raw$`Linha de Pesquisa`))
projetos.list <- sucupira.list
# list all available years
anos <- rev(as.numeric(list.dirs(file.path(getwd(), "Sucupira"), recursive = FALSE, full.names = FALSE)))
# initialize data structure
andamento.ano <-
matrix(NA, nrow = length(linhas), ncol = length(anos))
projetos.list <- sucupira.list
# list all available years
anos <- rev(as.numeric(list.dirs(file.path(getwd(), "Sucupira"), recursive = FALSE, full.names = FALSE)))
# initialize data structure
andamento.ano <-
matrix(NA, nrow = length(linhas), ncol = length(anos))
colnames(andamento.ano) <- anos
rownames(andamento.ano) <- linhas
concluido.ano <- andamento.ano
for (i in length(anos):1) {
print(anos[i])
projetos <- projetos.list[[i]]
projetos <-
projetos[projetos$`Membro Responsável` == "Sim" &
projetos$Situação == "EM ANDAMENTO",]
for (j in 1:length(linhas)) {
andamento.ano[j, i] <-
sum(projetos$`Linha de Pesquisa` == linhas[j], na.rm = TRUE)
}
projetos <- projetos.list[[i]]
projetos <-
projetos[projetos$`Membro Responsável` == "Sim" &
projetos$Situação == "CONCLUÍDO",]
for (j in 1:length(linhas)) {
concluido.ano[j, i] <-
sum(projetos$`Linha de Pesquisa` == linhas[j], na.rm = TRUE)
}
}
length(anos):1
# load list of Sucupira files to read
files.to.read <-
list.files(
file.path(getwd(), "Sucupira"),
pattern = "xlsx",
full.names = TRUE,
recursive = TRUE
)
# initialize vector and list
sucupira.raw <- c()
sucupira.list <- list()
for (i in 1:length(files.to.read)) {
sucupira.raw <-
rbind(sucupira.raw, read_excel(files.to.read[i], sheet = sheet))
sucupira.list[[i]] <- read_excel(files.to.read[i], sheet = sheet)
}
files.to.read
length(files.to.read)
# create a new code chunk and then use the PACKUP add-in to generate this code with all the required libraries for this Rmd
library(bsplus)
library(cowplot)
library(dplyr)
library(geobr)
library(ggplot2)
library(ggpubr)
library(grid)
library(gridExtra)
library(gtsummary)
library(htmlwidgets)
library(igraph)
library(kableExtra)
library(knitr)
library(magrittr)
library(RColorBrewer)
library(readxl)
library(Rmisc)
library(sf)
library(tm)
library(viridis)
library(webshot2)
library(wordcloud2)
# news
# read separate sheets
file.path <- "../PPGCR Unisuam/News.xlsx"
tabs <- excel_sheets(file.path)
topics <- c()
news.list <- vector(mode = "list", length = length(tabs))
# iterate across sheets
for (j in 1:length(tabs)) {
news <-
read_excel(file.path,
sheet = tabs[j],
col_types = c("text", "text", "text"))
topics <- rbind(topics, news[i, 1])
}
(file.path,
sheet = tabs[j],
col_types = c("text", "text", "text"))
read_excel(file.path,
sheet = tabs[j],
col_types = c("text", "text", "text"))
options(knitr.kable.NA = '--', knitr.table.format = "html")
# projetos - membros
sheet <- "Projetos - Membros"
source("Scripts/read_sucupira.R")
sucupira.raw
table(sucupira.raw$`Linha de Pesquisa`)
options(knitr.kable.NA = '--', knitr.table.format = "html")
# projetos - membros
sheet <- "Projetos - Membros"
source("Scripts/read_sucupira.R")
source("Scripts/read_sucupira.R")
# get all history of 'linha de pesquisa'
linhas <- na.exclude(unique(sucupira.raw$`Linha de Pesquisa`))
projetos.list <- sucupira.list
# list all available years
anos <- rev(as.numeric(list.dirs(file.path(getwd(), "Sucupira"), recursive = FALSE, full.names = FALSE)))
# initialize data structure
andamento.ano <-
matrix(NA, nrow = length(linhas), ncol = length(anos))
colnames(andamento.ano) <- anos
rownames(andamento.ano) <- linhas
concluido.ano <- andamento.ano
for (i in length(anos):1) {
projetos <- projetos.list[[i]]
projetos <-
projetos[projetos$`Membro Responsável` == "Sim" &
projetos$Situação == "EM ANDAMENTO",]
for (j in 1:length(linhas)) {
andamento.ano[j, i] <-
sum(projetos$`Linha de Pesquisa` == linhas[j], na.rm = TRUE)
}
projetos <- projetos.list[[i]]
projetos <-
projetos[projetos$`Membro Responsável` == "Sim" &
projetos$Situação == "CONCLUÍDO",]
for (j in 1:length(linhas)) {
concluido.ano[j, i] <-
sum(projetos$`Linha de Pesquisa` == linhas[j], na.rm = TRUE)
}
}
projetos.ano <- andamento.ano + concluido.ano
projetos.ano <-
projetos.ano[, order(colnames(projetos.ano), decreasing = FALSE)]
projetos.ano
View(projetos.ano)
linhas
View(andamento.ano)
View(concluido.ano)
anos
options(knitr.kable.NA = '--', knitr.table.format = "html")
# projetos - membros
sheet <- "Projetos - Membros"
source("Scripts/read_sucupira.R")
source("Scripts/read_sucupira.R")
# get all history of 'linha de pesquisa'
linhas <- na.exclude(unique(sucupira.raw$`Linha de Pesquisa`))
projetos.list <- sucupira.list
# list all available years
anos <- rev(as.numeric(list.dirs(file.path(getwd(), "Sucupira"), recursive = FALSE, full.names = FALSE)))
# initialize data structure
andamento.ano <-
matrix(NA, nrow = length(linhas), ncol = length(anos))
colnames(andamento.ano) <- anos
rownames(andamento.ano) <- linhas
concluido.ano <- andamento.ano
for (i in 1:length(anos)) {
projetos <- projetos.list[[i]]
projetos <-
projetos[projetos$`Membro Responsável` == "Sim" &
projetos$Situação == "EM ANDAMENTO",]
for (j in 1:length(linhas)) {
andamento.ano[j, i] <-
sum(projetos$`Linha de Pesquisa` == linhas[j], na.rm = TRUE)
}
projetos <- projetos.list[[i]]
projetos <-
projetos[projetos$`Membro Responsável` == "Sim" &
projetos$Situação == "CONCLUÍDO",]
for (j in 1:length(linhas)) {
concluido.ano[j, i] <-
sum(projetos$`Linha de Pesquisa` == linhas[j], na.rm = TRUE)
}
}
projetos.ano <- andamento.ano + concluido.ano
projetos.ano <-
projetos.ano[, order(colnames(projetos.ano), decreasing = FALSE)]
# projetos - membros
sheet <- "Projetos - Membros"
source("Scripts/read_sucupira.R")
source("Scripts/read_sucupira.R")
# get all history of 'linha de pesquisa'
linhas <- na.exclude(unique(sucupira.raw$`Linha de Pesquisa`))
projetos.list <- sucupira.list
projetos.list <- sucupira.list
# list all available years
anos <- as.numeric(list.dirs(file.path(getwd(), "Sucupira"), recursive = FALSE, full.names = FALSE))
# initialize data structure
andamento.ano <-
matrix(NA, nrow = length(linhas), ncol = length(anos))
colnames(andamento.ano) <- anos
rownames(andamento.ano) <- linhas
concluido.ano <- andamento.ano
for (i in 1:length(anos)) {
projetos <- projetos.list[[i]]
projetos <-
projetos[projetos$`Membro Responsável` == "Sim" &
projetos$Situação == "EM ANDAMENTO",]
for (j in 1:length(linhas)) {
andamento.ano[j, i] <-
sum(projetos$`Linha de Pesquisa` == linhas[j], na.rm = TRUE)
}
projetos <- projetos.list[[i]]
projetos <-
projetos[projetos$`Membro Responsável` == "Sim" &
projetos$Situação == "CONCLUÍDO",]
for (j in 1:length(linhas)) {
concluido.ano[j, i] <-
sum(projetos$`Linha de Pesquisa` == linhas[j], na.rm = TRUE)
}
}
projetos.ano <- andamento.ano + concluido.ano
projetos.ano <-
projetos.ano[, order(colnames(projetos.ano), decreasing = FALSE)]
layout(matrix(
c(1:2),
nrow = 2,
ncol = 1,
byrow = TRUE
), heights = c(1 / 2, 1 / 2))
par(
oma = c(2, 0.1, 2, 0.1),
mar = c(5, 4, 2, 2),
bg = '#2C3E50',
col.lab = "white",
col.axis = "white",
fg = "white"
)
# generate plot of projetos per linha by year
barplot(
projetos.ano,
xlab = "Ano",
ylab = "Quantidade",
col = brewer.pal(n = length(linhas), name = "Set3"),
xaxt = 'n',
ann = FALSE
)
axis(2, at = c(0, 100))
View(projetos.ano)
View(projetos.ano)
options(knitr.kable.NA = '--', knitr.table.format = "html")
# projetos - membros
sheet <- "Projetos - Membros"
source("Scripts/read_sucupira.R")
# get all history of 'linha de pesquisa'
linhas <- na.exclude(unique(sucupira.raw$`Linha de Pesquisa`))
projetos.list <- sucupira.list
# list all available years
anos <-
as.numeric(list.dirs(
file.path(getwd(), "Sucupira"),
recursive = FALSE,
full.names = FALSE
))
# initialize data structure
andamento.ano <-
matrix(NA, nrow = length(linhas), ncol = length(anos))
colnames(andamento.ano) <- anos
rownames(andamento.ano) <- linhas
concluido.ano <- andamento.ano
# iterate across all Sucupira list elements to search for active and closed projects
for (i in 1:length(anos)) {
projetos <- projetos.list[[i]]
projetos <-
projetos[projetos$`Membro Responsável` == "Sim" &
projetos$Situação == "EM ANDAMENTO",]
for (j in 1:length(linhas)) {
andamento.ano[j, i] <-
sum(projetos$`Linha de Pesquisa` == linhas[j], na.rm = TRUE)
}
projetos <- projetos.list[[i]]
projetos <-
projetos[projetos$`Membro Responsável` == "Sim" &
projetos$Situação == "CONCLUÍDO",]
for (j in 1:length(linhas)) {
concluido.ano[j, i] <-
sum(projetos$`Linha de Pesquisa` == linhas[j], na.rm = TRUE)
}
}
projetos.ano <- andamento.ano + concluido.ano
projetos.ano <-
projetos.ano[, order(colnames(projetos.ano), decreasing = FALSE)]
# plot area setup
par(
oma = c(2, 0.1, 2, 0.1),
mar = c(5, 4, 2, 2),
bg = '#2C3E50',
col.lab = "white",
col.axis = "white",
fg = "white",
col.main = "white"
)
# generate plot of projetos per linha by year (absolute frequency)
barplot(
projetos.ano,
ylab = "Frequência",
col = brewer.pal(n = length(linhas), name = "Set3"),
xaxt = 'n'
)
# generate plot of projetos per linha by year (relative frequency)
barplot(
scale(
as.matrix(projetos.ano),
center = FALSE,
scale = colSums(as.matrix(projetos.ano))
) * 100,
ylab = "Proporção",
col = brewer.pal(n = length(linhas), name = "Set3"),
xaxt = 'n',
ylim = c(0, 100)
)
# legend("top", legend = linhas, fill = brewer.pal(n = length(linhas), name = "Set3"), box.lwd = 0, cex = 1)
options(knitr.kable.NA = '--', knitr.table.format = "html")
# projetos - membros
sheet <- "Projetos - Membros"
source("Scripts/read_sucupira.R")
# get all history of 'linha de pesquisa'
linhas <- na.exclude(unique(sucupira.raw$`Linha de Pesquisa`))
projetos.list <- sucupira.list
# list all available years
anos <-
as.numeric(list.dirs(
file.path(getwd(), "Sucupira"),
recursive = FALSE,
full.names = FALSE
))
# initialize data structure
andamento.ano <-
matrix(NA, nrow = length(linhas), ncol = length(anos))
colnames(andamento.ano) <- anos
rownames(andamento.ano) <- linhas
concluido.ano <- andamento.ano
# iterate across all Sucupira list elements to search for active and closed projects
for (i in 1:length(anos)) {
projetos <- projetos.list[[i]]
projetos <-
projetos[projetos$`Membro Responsável` == "Sim" &
projetos$Situação == "EM ANDAMENTO",]
for (j in 1:length(linhas)) {
andamento.ano[j, i] <-
sum(projetos$`Linha de Pesquisa` == linhas[j], na.rm = TRUE)
}
projetos <- projetos.list[[i]]
projetos <-
projetos[projetos$`Membro Responsável` == "Sim" &
projetos$Situação == "CONCLUÍDO",]
for (j in 1:length(linhas)) {
concluido.ano[j, i] <-
sum(projetos$`Linha de Pesquisa` == linhas[j], na.rm = TRUE)
}
}
projetos.ano <- andamento.ano + concluido.ano
projetos.ano <-
projetos.ano[, order(colnames(projetos.ano), decreasing = FALSE)]
# plot area setup
par(
oma = c(2, 0.1, 2, 0.1),
mar = c(5, 4, 2, 2),
bg = '#2C3E50',
col.lab = "white",
col.axis = "white",
fg = "white",
col.main = "white"
)
# generate plot of projetos per linha by year (absolute frequency)
barplot(
projetos.ano,
ylab = "Frequência",
col = brewer.pal(n = length(linhas), name = "Set3"),
)
# generate plot of projetos per linha by year (relative frequency)
barplot(
scale(
as.matrix(projetos.ano),
center = FALSE,
scale = colSums(as.matrix(projetos.ano))
) * 100,
ylab = "Proporção",
col = brewer.pal(n = length(linhas), name = "Set3"),
ylim = c(0, 100)
)
# legend("top", legend = linhas, fill = brewer.pal(n = length(linhas), name = "Set3"), box.lwd = 0, cex = 1)
# get only current 'linha de pesquisa'
linhas.curr <- na.exclude(unique(sucupira.list[[length(anos)]]$`Linha de Pesquisa`))
linhas.curr
par('user')
