par(oma=c(0, 0, 0, 0), mar = c(2, 0, 0, 0), bg = '#2C3E50', col.lab = "white", mfrow=c(1,1))
colrs <- brewer.pal(n = n.categ, name = "Set3")
plot(network, directed = FALSE, arrow.mode = 0, vertex.label = NA, vertex.frame.color = "white", vertex.size = log(deg)*0.7, edge.color = "grey", edge.lty = "solid", edge.size = 3, edge.curved = .2)
legend("bottom", legend = levels(categ), pch = 19, col = colrs, text.col = "white", bty = "n", horiz = TRUE, cex = 0.8, x.intersp = 0.2)
options(knitr.kable.NA = '--', knitr.table.format = "html")
# read packages
library(knitr)
library(kableExtra)
library(readxl)
library(igraph)
library(RColorBrewer)
# read data and row-bind all Sucupira XLSX files
sheet <- "Projetos - Membros"
membros.raw <- c()
files.to.read <- list.files("../PPGCR Unisuam/Sucupira/", pattern = "xlsx", full.names = TRUE)
for(i in 1:length(files.to.read)){
membros.raw <- rbind(membros.raw, read_excel(files.to.read[i], sheet = sheet))
}
# create edge matrix
proj.id <- as.factor(membros.raw$`Identificador do Projeto de Pesquisa`)
n.proj <- nlevels(proj.id)
membros <- sort(unique(membros.raw$`Nome do Membro do Projeto`))
n.membros <- length(membros)
categ <- as.factor(membros.raw$`Categoria do Membro do Projeto`)
n.categ <- nlevels(categ)
edge.matrix <- matrix(NA, nrow = 0, ncol = 2)
colnames(edge.matrix) <- c("from", "to")
# loop across all projects to populate the edge matrix
for(i in 1:n.proj){
# get the members by project id
membros.proj <- unique(membros.raw$`Nome do Membro do Projeto`[proj.id == levels(proj.id)[i]])
# only vote for upper diagonal elements
for(n in 1:length(membros.proj)){
for(m in n:length(membros.proj)){
if(n != m){
# find members
row.n <- match(membros.proj[n], membros)
col.m <- match(membros.proj[m], membros)
new.edge <- cbind(membros[row.n], membros[col.m])
# add edges
edge.matrix <- rbind(edge.matrix, new.edge)
}
}
}
}
# build the graph object
network <- graph_from_edgelist(edge.matrix, directed = FALSE)
# set member category and color
for (i in 1:length(V(network))){
categ.id <- match(V(network)[[i]]$name, membros.raw$`Nome do Membro do Projeto`)
V(network)[[i]]$categ <- membros.raw$`Categoria do Membro do Projeto`[categ.id]
col.id <- match(V(network)[[i]]$categ, levels(categ))
V(network)[i]$color <- colrs[col.id]
}
# plot it
par(oma=c(2, 0, 0, 0), mar = c(0, 0, 0, 0), bg = '#2C3E50', col.lab = "white", mfrow=c(1,1))
colrs <- brewer.pal(n = n.categ, name = "Set3")
plot(network, directed = FALSE, arrow.mode = 0, vertex.label = NA, vertex.frame.color = "white", vertex.size = log(deg)*0.7, edge.color = "grey", edge.lty = "solid", edge.size = 3, edge.curved = .2)
legend("bottom", legend = levels(categ), pch = 19, col = colrs, text.col = "white", bty = "n", horiz = TRUE, cex = 0.8, x.intersp = 0.2)
options(knitr.kable.NA = '--', knitr.table.format = "html")
# read packages
library(knitr)
library(kableExtra)
library(readxl)
library(igraph)
library(RColorBrewer)
# read data and row-bind all Sucupira XLSX files
sheet <- "Projetos - Membros"
membros.raw <- c()
files.to.read <- list.files("../PPGCR Unisuam/Sucupira/", pattern = "xlsx", full.names = TRUE)
for(i in 1:length(files.to.read)){
membros.raw <- rbind(membros.raw, read_excel(files.to.read[i], sheet = sheet))
}
# create edge matrix
proj.id <- as.factor(membros.raw$`Identificador do Projeto de Pesquisa`)
n.proj <- nlevels(proj.id)
membros <- sort(unique(membros.raw$`Nome do Membro do Projeto`))
n.membros <- length(membros)
categ <- as.factor(membros.raw$`Categoria do Membro do Projeto`)
n.categ <- nlevels(categ)
edge.matrix <- matrix(NA, nrow = 0, ncol = 2)
colnames(edge.matrix) <- c("from", "to")
# loop across all projects to populate the edge matrix
for(i in 1:n.proj){
# get the members by project id
membros.proj <- unique(membros.raw$`Nome do Membro do Projeto`[proj.id == levels(proj.id)[i]])
# only vote for upper diagonal elements
for(n in 1:length(membros.proj)){
for(m in n:length(membros.proj)){
if(n != m){
# find members
row.n <- match(membros.proj[n], membros)
col.m <- match(membros.proj[m], membros)
new.edge <- cbind(membros[row.n], membros[col.m])
# add edges
edge.matrix <- rbind(edge.matrix, new.edge)
}
}
}
}
# build the graph object
network <- graph_from_edgelist(edge.matrix, directed = FALSE)
# set member category and color
for (i in 1:length(V(network))){
categ.id <- match(V(network)[[i]]$name, membros.raw$`Nome do Membro do Projeto`)
V(network)[[i]]$categ <- membros.raw$`Categoria do Membro do Projeto`[categ.id]
col.id <- match(V(network)[[i]]$categ, levels(categ))
V(network)[i]$color <- colrs[col.id]
}
# plot it
par(oma=c(0, 0, 0, 0), mar = c(0, 0, 0, 0), bg = '#2C3E50', col.lab = "white", mfrow=c(1,1))
colrs <- brewer.pal(n = n.categ, name = "Set3")
plot(network, directed = FALSE, arrow.mode = 0, vertex.label = NA, vertex.frame.color = "white", vertex.size = log(deg)*0.7, edge.color = "grey", edge.lty = "solid", edge.size = 3, edge.curved = .2)
legend(x = 0, y = -1, "bottom", legend = levels(categ), pch = 19, col = colrs, text.col = "white", bty = "n", horiz = TRUE, cex = 0.8, x.intersp = 0.2)
options(knitr.kable.NA = '--', knitr.table.format = "html")
# read packages
library(knitr)
library(kableExtra)
library(readxl)
library(igraph)
library(RColorBrewer)
# read data and row-bind all Sucupira XLSX files
sheet <- "Projetos - Membros"
membros.raw <- c()
files.to.read <- list.files("../PPGCR Unisuam/Sucupira/", pattern = "xlsx", full.names = TRUE)
for(i in 1:length(files.to.read)){
membros.raw <- rbind(membros.raw, read_excel(files.to.read[i], sheet = sheet))
}
# create edge matrix
proj.id <- as.factor(membros.raw$`Identificador do Projeto de Pesquisa`)
n.proj <- nlevels(proj.id)
membros <- sort(unique(membros.raw$`Nome do Membro do Projeto`))
n.membros <- length(membros)
categ <- as.factor(membros.raw$`Categoria do Membro do Projeto`)
n.categ <- nlevels(categ)
edge.matrix <- matrix(NA, nrow = 0, ncol = 2)
colnames(edge.matrix) <- c("from", "to")
# loop across all projects to populate the edge matrix
for(i in 1:n.proj){
# get the members by project id
membros.proj <- unique(membros.raw$`Nome do Membro do Projeto`[proj.id == levels(proj.id)[i]])
# only vote for upper diagonal elements
for(n in 1:length(membros.proj)){
for(m in n:length(membros.proj)){
if(n != m){
# find members
row.n <- match(membros.proj[n], membros)
col.m <- match(membros.proj[m], membros)
new.edge <- cbind(membros[row.n], membros[col.m])
# add edges
edge.matrix <- rbind(edge.matrix, new.edge)
}
}
}
}
# build the graph object
network <- graph_from_edgelist(edge.matrix, directed = FALSE)
# set member category and color
for (i in 1:length(V(network))){
categ.id <- match(V(network)[[i]]$name, membros.raw$`Nome do Membro do Projeto`)
V(network)[[i]]$categ <- membros.raw$`Categoria do Membro do Projeto`[categ.id]
col.id <- match(V(network)[[i]]$categ, levels(categ))
V(network)[i]$color <- colrs[col.id]
}
# plot it
par(oma=c(0, 0, 0, 0), mar = c(0, 0, 0, 0), bg = '#2C3E50', col.lab = "white", mfrow=c(1,1))
colrs <- brewer.pal(n = n.categ, name = "Set3")
plot(network, directed = FALSE, arrow.mode = 0, vertex.label = NA, vertex.frame.color = "white", vertex.size = log(deg)*0.7, edge.color = "grey", edge.lty = "solid", edge.size = 3, edge.curved = .2)
legend(x = 0, y = -1, legend = levels(categ), pch = 19, col = colrs, text.col = "white", bty = "n", horiz = TRUE, cex = 0.8, x.intersp = 0.2)
options(knitr.kable.NA = '--', knitr.table.format = "html")
# read packages
library(knitr)
library(kableExtra)
library(readxl)
library(igraph)
library(RColorBrewer)
# read data and row-bind all Sucupira XLSX files
sheet <- "Projetos - Membros"
membros.raw <- c()
files.to.read <- list.files("../PPGCR Unisuam/Sucupira/", pattern = "xlsx", full.names = TRUE)
for(i in 1:length(files.to.read)){
membros.raw <- rbind(membros.raw, read_excel(files.to.read[i], sheet = sheet))
}
# create edge matrix
proj.id <- as.factor(membros.raw$`Identificador do Projeto de Pesquisa`)
n.proj <- nlevels(proj.id)
membros <- sort(unique(membros.raw$`Nome do Membro do Projeto`))
n.membros <- length(membros)
categ <- as.factor(membros.raw$`Categoria do Membro do Projeto`)
n.categ <- nlevels(categ)
edge.matrix <- matrix(NA, nrow = 0, ncol = 2)
colnames(edge.matrix) <- c("from", "to")
# loop across all projects to populate the edge matrix
for(i in 1:n.proj){
# get the members by project id
membros.proj <- unique(membros.raw$`Nome do Membro do Projeto`[proj.id == levels(proj.id)[i]])
# only vote for upper diagonal elements
for(n in 1:length(membros.proj)){
for(m in n:length(membros.proj)){
if(n != m){
# find members
row.n <- match(membros.proj[n], membros)
col.m <- match(membros.proj[m], membros)
new.edge <- cbind(membros[row.n], membros[col.m])
# add edges
edge.matrix <- rbind(edge.matrix, new.edge)
}
}
}
}
# build the graph object
network <- graph_from_edgelist(edge.matrix, directed = FALSE)
# set member category and color
for (i in 1:length(V(network))){
categ.id <- match(V(network)[[i]]$name, membros.raw$`Nome do Membro do Projeto`)
V(network)[[i]]$categ <- membros.raw$`Categoria do Membro do Projeto`[categ.id]
col.id <- match(V(network)[[i]]$categ, levels(categ))
V(network)[i]$color <- colrs[col.id]
}
# plot it
par(oma=c(0, 0, 0, 0), mar = c(0, 0, 0, 0), bg = '#2C3E50', col.lab = "white", mfrow=c(1,1))
colrs <- brewer.pal(n = n.categ, name = "Set3")
plot(network, directed = FALSE, arrow.mode = 0, vertex.label = NA, vertex.frame.color = "white", vertex.size = log(deg)*0.7, edge.color = "grey", edge.lty = "solid", edge.size = 3, edge.curved = .2)
legend("topleft", legend = levels(categ), pch = 19, col = colrs, text.col = "white", bty = "n", horiz = FALSE, cex = 0.8, x.intersp = 0.2)
options(knitr.kable.NA = '--', knitr.table.format = "html")
# read packages
library(knitr)
library(kableExtra)
library(readxl)
library(igraph)
library(RColorBrewer)
# read data and row-bind all Sucupira XLSX files
sheet <- "Projetos - Membros"
membros.raw <- c()
files.to.read <- list.files("../PPGCR Unisuam/Sucupira/", pattern = "xlsx", full.names = TRUE)
for(i in 1:length(files.to.read)){
membros.raw <- rbind(membros.raw, read_excel(files.to.read[i], sheet = sheet))
}
# create edge matrix
proj.id <- as.factor(membros.raw$`Identificador do Projeto de Pesquisa`)
n.proj <- nlevels(proj.id)
membros <- sort(unique(membros.raw$`Nome do Membro do Projeto`))
n.membros <- length(membros)
categ <- as.factor(membros.raw$`Categoria do Membro do Projeto`)
n.categ <- nlevels(categ)
edge.matrix <- matrix(NA, nrow = 0, ncol = 2)
colnames(edge.matrix) <- c("from", "to")
# loop across all projects to populate the edge matrix
for(i in 1:n.proj){
# get the members by project id
membros.proj <- unique(membros.raw$`Nome do Membro do Projeto`[proj.id == levels(proj.id)[i]])
# only vote for upper diagonal elements
for(n in 1:length(membros.proj)){
for(m in n:length(membros.proj)){
if(n != m){
# find members
row.n <- match(membros.proj[n], membros)
col.m <- match(membros.proj[m], membros)
new.edge <- cbind(membros[row.n], membros[col.m])
# add edges
edge.matrix <- rbind(edge.matrix, new.edge)
}
}
}
}
# build the graph object
network <- graph_from_edgelist(edge.matrix, directed = FALSE)
# set member category and color
for (i in 1:length(V(network))){
categ.id <- match(V(network)[[i]]$name, membros.raw$`Nome do Membro do Projeto`)
V(network)[[i]]$categ <- membros.raw$`Categoria do Membro do Projeto`[categ.id]
col.id <- match(V(network)[[i]]$categ, levels(categ))
V(network)[i]$color <- colrs[col.id]
}
# plot it
par(oma=c(0, 0, 0, 0), mar = c(0, 0, 0, 0), bg = '#2C3E50', col.lab = "white", mfrow=c(1,1))
colrs <- brewer.pal(n = n.categ, name = "Set3")
plot(network, directed = FALSE, arrow.mode = 0, vertex.label = NA, vertex.frame.color = "white", vertex.size = log(deg)*0.7, edge.color = "grey", edge.lty = "solid", edge.size = 3, edge.curved = .2)
legend("bottomleft", legend = levels(categ), pch = 19, col = colrs, text.col = "white", bty = "n", horiz = FALSE, cex = 0.8, x.intersp = 1)
options(knitr.kable.NA = '--', knitr.table.format = "html")
# read packages
library(knitr)
library(kableExtra)
library(readxl)
library(igraph)
library(RColorBrewer)
# read data and row-bind all Sucupira XLSX files
sheet <- "Projetos - Membros"
membros.raw <- c()
files.to.read <- list.files("../PPGCR Unisuam/Sucupira/", pattern = "xlsx", full.names = TRUE)
for(i in 1:length(files.to.read)){
membros.raw <- rbind(membros.raw, read_excel(files.to.read[i], sheet = sheet))
}
# create edge matrix
proj.id <- as.factor(membros.raw$`Identificador do Projeto de Pesquisa`)
n.proj <- nlevels(proj.id)
membros <- sort(unique(membros.raw$`Nome do Membro do Projeto`))
n.membros <- length(membros)
categ <- as.factor(membros.raw$`Categoria do Membro do Projeto`)
n.categ <- nlevels(categ)
edge.matrix <- matrix(NA, nrow = 0, ncol = 2)
colnames(edge.matrix) <- c("from", "to")
# loop across all projects to populate the edge matrix
for(i in 1:n.proj){
# get the members by project id
membros.proj <- unique(membros.raw$`Nome do Membro do Projeto`[proj.id == levels(proj.id)[i]])
# only vote for upper diagonal elements
for(n in 1:length(membros.proj)){
for(m in n:length(membros.proj)){
if(n != m){
# find members
row.n <- match(membros.proj[n], membros)
col.m <- match(membros.proj[m], membros)
new.edge <- cbind(membros[row.n], membros[col.m])
# add edges
edge.matrix <- rbind(edge.matrix, new.edge)
}
}
}
}
# build the graph object
network <- graph_from_edgelist(edge.matrix, directed = FALSE)
# set member category and color
for (i in 1:length(V(network))){
categ.id <- match(V(network)[[i]]$name, membros.raw$`Nome do Membro do Projeto`)
V(network)[[i]]$categ <- membros.raw$`Categoria do Membro do Projeto`[categ.id]
col.id <- match(V(network)[[i]]$categ, levels(categ))
V(network)[i]$color <- colrs[col.id]
}
# plot it
par(oma=c(0, 0, 0, 0), mar = c(0, 0, 0, 0), bg = '#2C3E50', col.lab = "white", mfrow=c(1,1))
colrs <- brewer.pal(n = n.categ, name = "Set3")
plot(network, directed = FALSE, arrow.mode = 0, vertex.label = NA, vertex.frame.color = "white", vertex.size = log(deg)*0.7, edge.color = "grey", edge.lty = "solid", edge.size = 3, edge.curved = .2)
legend("bottomright", legend = levels(categ), pch = 19, col = colrs, text.col = "white", bty = "n", horiz = FALSE, cex = 0.8, x.intersp = 1)
options(knitr.kable.NA = '--', knitr.table.format = "html")
# read packages
library(knitr)
library(kableExtra)
library(readxl)
library(RColorBrewer)
library(geobr)
library(geobr)
library(ggplot2)
library(sf)
library(dplyr)
library(grid)
library(gridExtra)
library(Rmisc)
library(cowplot)
discentes.raw <- read_excel("../PPGCR Unisuam/Discentes.xlsx", sheet = "DATA.discentes")
discentes <- discentes.raw[discentes.raw$`Ano Titulação` != "*", ]
mestres <- discentes[discentes$Curso == "Mestrado", ]
doutores <- discentes[discentes$Curso == "Doutorado", ]
par(oma=c(2, 0.1, 2, 0.1), mar = c(5, 4, 2, 2), bg = '#2C3E50', col.lab = "white", col.axis = "white", fg = "white", col.main = "white")
# generate plot of titulados per year
table.1 <- table(discentes$Curso, discentes$`Ano Titulação`)
barplot(as.matrix(table.1), xlab = "Ano", ylab = "Titulados", col = c("darkblue", "lightblue"), bty = "n")
barplot(as.matrix(table.1), xlab = "Ano", ylab = "Titulados", col = c("darkblue", "lightblue"), bty = "n")
legend("topleft", legend = levels(as.factor(discentes$Curso)), fill = c("darkblue", "lightblue"), box.lty = 0)
cat("<br>")
cat('<hr style="height:2px;border-width:0;color:white;background-color:white">')
cat("<br>")
cat("<h1> **Tempo médio de titulação, por ano** </h1>  \n")
par(oma=c(2, 0.1, 2, 0.1), mar = c(5, 4, 2, 2), bg = '#2C3E50', col.lab = "white", col.axis = "white", fg = "white", col.main = "white")
# generate plot of tempo para titulação per year
tmt.mestr.ano <- aggregate(as.numeric(mestres$`Tempo de Curso (meses)`), by = list(mestres$`Ano Titulação`), FUN = mean, na.rm = TRUE)
tmt.dout.ano <- aggregate(as.numeric(doutores$`Tempo de Curso (meses)`), by = list(doutores$`Ano Titulação`), FUN = mean, na.rm = TRUE)
plot(tmt.mestr.ano$Group.1, tmt.mestr.ano$x, type = "l", lty = 1, lwd = 6, xlab = "Ano", ylab = "Meses", col = c("lightblue"), ylim = c(18,60), bty = "n")
lines(tmt.dout.ano$Group.1, tmt.dout.ano$x, type = "l", lty = 1, lwd = 6, xlab = "Ano", ylab = "Meses", col = c("darkblue"), ylim = c(18,60))
legend("topleft", legend = levels(as.factor(discentes$Curso)), col = c("darkblue", "lightblue"), pch = "lines", lwd = 6, box.lty = 0)
plot(tmt.mestr.ano$Group.1, tmt.mestr.ano$x, type = "l", lty = 1, lwd = 6, xlab = "Ano", ylab = "Meses", col = c("lightblue"), ylim = c(18,60), bty = "n")
lines(tmt.dout.ano$Group.1, tmt.dout.ano$x, type = "l", lty = 1, lwd = 6, xlab = "Ano", ylab = "Meses", col = c("darkblue"), ylim = c(18,60))
legend("topleft", legend = levels(as.factor(discentes$Curso)), col = c("darkblue", "lightblue"), pch = "lines", lwd = 6, box.lty = 0)
cat("<br>")
cat('<hr style="height:2px;border-width:0;color:white;background-color:white">')
cat("<br>")
# code for html anchor frmo yml file
cat('<div id="egressos" class="section level2">', sep = "")
cat("<h1> [**Egressos**](pessoas.html#egressos) </h1>  \n")
par(oma=c(0, 0, 0, 0), mar = c(0, 0, 0, 0), bg = '#2C3E50', col.lab = "white", col.axis = "white", fg = "white", col.main = "white")
states <- read_state(year=2019, showProgress = FALSE)
states$discentes <- rep(NA, dim(states)[1])
UF <- as.data.frame(table(discentes$UF))
for (i in 1:length(UF$Var1)){
states$discentes[states$abbrev_state == UF$Var1[i]] <- UF$Freq[i]
}
options(knitr.kable.NA = '--', knitr.table.format = "html")
# read packages
library(knitr)
library(kableExtra)
library(magrittr)
library(readxl)
library(RColorBrewer)
library(geobr)
library(ggplot2)
library(sf)
library(dplyr)
library(grid)
library(gridExtra)
library(Rmisc)
library(cowplot)
discentes.raw <- read_excel("../PPGCR Unisuam/Discentes.xlsx", sheet = "DATA.discentes")
discentes <- discentes.raw[discentes.raw$`Ano Titulação` != "*", ]
mestres <- discentes[discentes$Curso == "Mestrado", ]
doutores <- discentes[discentes$Curso == "Doutorado", ]
par(oma=c(2, 0.1, 2, 0.1), mar = c(5, 4, 2, 2), bg = '#2C3E50', col.lab = "white", col.axis = "white", fg = "white", col.main = "white")
# generate plot of titulados per year
table.1 <- table(discentes$Curso, discentes$`Ano Titulação`)
barplot(as.matrix(table.1), xlab = "Ano", ylab = "Titulados", col = c("darkblue", "lightblue"), bty = "n")
legend("topleft", legend = levels(as.factor(discentes$Curso)), fill = c("darkblue", "lightblue"), box.lty = 0)
# generate plot of titulados per year
table.1 <- table(discentes$Curso, discentes$`Ano Titulação`)
barplot(as.matrix(table.1), xlab = "Ano", ylab = "Titulados", col = c("darkblue", "lightblue"), bty = "n")
legend("topleft", legend = levels(as.factor(discentes$Curso)), fill = c("darkblue", "lightblue"), box.lty = 0)
cat("<br>")
cat('<hr style="height:2px;border-width:0;color:white;background-color:white">')
cat("<br>")
cat("<h1> **Tempo médio de titulação, por ano** </h1>  \n")
par(oma=c(2, 0.1, 2, 0.1), mar = c(5, 4, 2, 2), bg = '#2C3E50', col.lab = "white", col.axis = "white", fg = "white", col.main = "white")
# generate plot of tempo para titulação per year
tmt.mestr.ano <- aggregate(as.numeric(mestres$`Tempo de Curso (meses)`), by = list(mestres$`Ano Titulação`), FUN = mean, na.rm = TRUE)
tmt.dout.ano <- aggregate(as.numeric(doutores$`Tempo de Curso (meses)`), by = list(doutores$`Ano Titulação`), FUN = mean, na.rm = TRUE)
plot(tmt.mestr.ano$Group.1, tmt.mestr.ano$x, type = "l", lty = 1, lwd = 6, xlab = "Ano", ylab = "Meses", col = c("lightblue"), ylim = c(18,60), bty = "n")
lines(tmt.dout.ano$Group.1, tmt.dout.ano$x, type = "l", lty = 1, lwd = 6, xlab = "Ano", ylab = "Meses", col = c("darkblue"), ylim = c(18,60))
legend("topleft", legend = levels(as.factor(discentes$Curso)), col = c("darkblue", "lightblue"), pch = "lines", lwd = 6, box.lty = 0)
cat("<br>")
cat('<hr style="height:2px;border-width:0;color:white;background-color:white">')
cat("<br>")
# code for html anchor frmo yml file
cat('<div id="egressos" class="section level2">', sep = "")
cat("<h1> [**Egressos**](pessoas.html#egressos) </h1>  \n")
par(oma=c(0, 0, 0, 0), mar = c(0, 0, 0, 0), bg = '#2C3E50', col.lab = "white", col.axis = "white", fg = "white", col.main = "white")
states <- read_state(year=2019, showProgress = FALSE)
install.packages(c("effectsize", "fansi", "jsonlite", "nlme", "Rcpp", "renv", "systemfonts"))
states <- read_state(year=2019, showProgress = FALSE, code_state = "all")
states <- read_state(code_state = "all", year = 2022, simplified - TRUE, showProgress = FALSE)
states <- read_state(code_state = "all", year = 2021, simplified - TRUE, showProgress = FALSE)
states <- read_state(code_state = "all", year = 2020, simplified - TRUE, showProgress = FALSE)
states <- read_state(code_state = "all", year = 2019, simplified - TRUE, showProgress = FALSE)
read_state(code_state = "all", year = 2019, simplified - TRUE, showProgress = FALSE)
read_state(code_state = "all", year = 2010, simplified - TRUE, showProgress = FALSE)
states <- read_state(code_state = "all", year = 2022, simplified = TRUE, showProgress = FALSE)
states <- read_state(code_state = "all", year = 2021, simplified = TRUE, showProgress = FALSE)
1read_state(code_state = "all", year = 2021, simplified = TRUE, showProgress = FALSE)
read_state(code_state = "all", year = 2021, simplified = TRUE, showProgress = FALSE)
states <- read_state(year = 2021, simplified = TRUE, showProgress = FALSE)
states <- read_state(year = 2019, showProgress = FALSE)
states <- read_state(showProgress = FALSE)
par(oma=c(0, 0, 0, 0), mar = c(0, 0, 0, 0), bg = '#2C3E50', col.lab = "white", col.axis = "white", fg = "white", col.main = "white")
states <- read_state(showProgress = FALSE)
install.packages("geobr")
install.packages("systemfonts")
# read packages
library(knitr)
library(kableExtra)
library(magrittr)
library(readxl)
library(RColorBrewer)
library(geobr)
library(geobr)
library(ggplot2)
library(sf)
library(dplyr)
library(grid)
library(gridExtra)
library(Rmisc)
library(cowplot)
discentes.raw <- read_excel("../PPGCR Unisuam/Discentes.xlsx", sheet = "DATA.discentes")
discentes <- discentes.raw[discentes.raw$`Ano Titulação` != "*", ]
mestres <- discentes[discentes$Curso == "Mestrado", ]
doutores <- discentes[discentes$Curso == "Doutorado", ]
par(oma=c(2, 0.1, 2, 0.1), mar = c(5, 4, 2, 2), bg = '#2C3E50', col.lab = "white", col.axis = "white", fg = "white", col.main = "white")
# generate plot of titulados per year
table.1 <- table(discentes$Curso, discentes$`Ano Titulação`)
barplot(as.matrix(table.1), xlab = "Ano", ylab = "Titulados", col = c("darkblue", "lightblue"), bty = "n")
legend("topleft", legend = levels(as.factor(discentes$Curso)), fill = c("darkblue", "lightblue"), box.lty = 0)
barplot(as.matrix(table.1), xlab = "Ano", ylab = "Titulados", col = c("darkblue", "lightblue"), bty = "n")
legend("topleft", legend = levels(as.factor(discentes$Curso)), fill = c("darkblue", "lightblue"), box.lty = 0)
cat("<br>")
cat('<hr style="height:2px;border-width:0;color:white;background-color:white">')
cat("<br>")
cat("<h1> **Tempo médio de titulação, por ano** </h1>  \n")
par(oma=c(2, 0.1, 2, 0.1), mar = c(5, 4, 2, 2), bg = '#2C3E50', col.lab = "white", col.axis = "white", fg = "white", col.main = "white")
# generate plot of tempo para titulação per year
tmt.mestr.ano <- aggregate(as.numeric(mestres$`Tempo de Curso (meses)`), by = list(mestres$`Ano Titulação`), FUN = mean, na.rm = TRUE)
tmt.dout.ano <- aggregate(as.numeric(doutores$`Tempo de Curso (meses)`), by = list(doutores$`Ano Titulação`), FUN = mean, na.rm = TRUE)
plot(tmt.mestr.ano$Group.1, tmt.mestr.ano$x, type = "l", lty = 1, lwd = 6, xlab = "Ano", ylab = "Meses", col = c("lightblue"), ylim = c(18,60), bty = "n")
lines(tmt.dout.ano$Group.1, tmt.dout.ano$x, type = "l", lty = 1, lwd = 6, xlab = "Ano", ylab = "Meses", col = c("darkblue"), ylim = c(18,60))
legend("topleft", legend = levels(as.factor(discentes$Curso)), col = c("darkblue", "lightblue"), pch = "lines", lwd = 6, box.lty = 0)
cat("<br>")
cat('<hr style="height:2px;border-width:0;color:white;background-color:white">')
cat("<br>")
# code for html anchor frmo yml file
cat('<div id="egressos" class="section level2">', sep = "")
cat("<h1> [**Egressos**](pessoas.html#egressos) </h1>  \n")
par(oma=c(0, 0, 0, 0), mar = c(0, 0, 0, 0), bg = '#2C3E50', col.lab = "white", col.axis = "white", fg = "white", col.main = "white")
states <- read_state(year=2019, showProgress = FALSE)
states <- geobr::read_state(year=2019, showProgress = FALSE)
utils::remove.packages('geobr')
devtools::install_github("ipeaGIT/geobr", subdir = "r-package")
library(geobr)
library(ggplot2)
library(sf)
library(dplyr)
state <- read_state(code_state="SE", year=2018)
read_state(code_state="SE", year=2018)
install.packages("sf", configure.args = "--with-proj-lib=/usr/local/lib/")
install.packages("systemfonts")
install.packages("systemfonts", configure.args = "--with-proj-lib=/usr/local/lib/")
install.packages("systemfonts")
path(getwd(), "Sucupira")
file.path(getwd(), "Sucupira")
